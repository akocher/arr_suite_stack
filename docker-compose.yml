# Compose file for the *arr stack. Configuration files are stored 
# in a docker folder mounted in root. Change to bind mounts if needed.
# All containers are ran with user and group ids of the main user and 
# share to aviod permissions issues of downloaded files, please refer
# the read me file for more information.
version: '3.9'
services:
  gluetun:
    image: qmcgaw/gluetun:latest
    platform: linux/amd64
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8080:8080  # qBittorrent Web UI
      - 6881:6881  # Torrent port (TCP)
      - 6789:6789  # NZBGet
      - 9696:9696  # Prowlarr
    volumes:
      - /docker/gluetun:/gluetun
    environment:
   #   - VPN_SERVICE_PROVIDER=airvpn
    #  - VPN_TYPE=wireguard
   #   - FIREWALL_VPN_INPUT_PORTS=port
    # - FIREWALL_OUTBOUND_SUBNETS=192.168.0.0/24 # add if prowlarr wont connect to other arr apps, change to your specific subnet
    #  - WIREGUARD_PRIVATE_KEY=key
    #  - WIREGUARD_PRESHARED_KEY=key
    #  - WIREGUARD_ADDRESSES=ip
    #  - SERVER_COUNTRIES=country
    #  - SERVER_CITIES=city
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=openvpn # or wireguard
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASS}
      - SERVER_COUNTRIES=United States
      - SERVER_CITIES=Denver
      - HEALTH_VPN_DURATION_INITIAL=120s
      - DOT=off
      - DNS_OVER_TLS=off
      - VPN_DNS=1.1.1.1,8.8.8.8
    healthcheck:
      test: wget -q --spider https://www.google.com || exit 1
      interval: 60s
      timeout: 20s
      retries: 5
    restart: unless-stopped

# This is a new addition since creating the tutorial video on this stack. 
# See the 'qBittorrent Stalls with VPN Timeout' section for more information.
  deunhealth:
    image: qmcgaw/deunhealth:latest
    platform: linux/amd64
    container_name: deunhealth
    network_mode: "none"
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=America/Denver
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
# Healthcheck was added to work with deunhealth to restart container
# on unhealthy status. labels allows deunhealth to monitor.
  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent:latest
    platform: linux/amd64
    container_name: qbittorrent
    restart: on-failure
    labels:
      - deunhealth.restart.on.unhealthy="true"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - /docker/qbittorrent:/config
      - /data:/data
    network_mode: service:gluetun
    healthcheck:
      test: wget -q --spider https://www.google.com || exit 1
      interval: 60s
      retries: 3
      start_period: 20s
      timeout: 10s


  nzbget:
    image: ghcr.io/linuxserver/nzbget:latest
    platform: linux/amd64
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      - NZBGET_USER=#{NZBGET_USER}
      - NZBGET_PASS=#{NZBGET_PASS}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/nzbget:/config
      - /data:/data
    restart: unless-stopped
    network_mode: service:gluetun

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:latest
    platform: linux/amd64
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/prowlarr:/config
    restart: unless-stopped
    network_mode: service:gluetun

  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    platform: linux/amd64
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/sonarr:/config
      - /data:/data
    ports:
      - 8989:8989

  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    platform: linux/amd64
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/radarr:/config
      - /data:/data
    ports:
      - 7878:7878

  lidarr:
    image: ghcr.io/linuxserver/lidarr:latest
    platform: linux/amd64
    container_name: lidarr
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/lidarr:/config
      - /data:/data
    environment:
     - PUID=1000
     - PGID=1000
     - TZ=America/Denver
    ports:
      - 8686:8686
  
  bazarr:
    image: ghcr.io/linuxserver/bazarr:latest
    platform: linux/amd64
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/bazarr:/config
      - /data:/data
    ports:
      - 6767:6767

  readarr:
    image: ghcr.io/linuxserver/readarr:0.4.19-nightly   # use nightly or latest; develop is sometimes missing
    platform: linux/amd64
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/readarr:/config
      - /data:/data
    ports:
      - 8787:8787
    restart: unless-stopped
    
  readarr2:
    image: ghcr.io/linuxserver/readarr:0.4.19-nightly
    platform: linux/amd64
    container_name: readarr2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/readarr2:/config
      - /data:/data
    ports:
      - 8788:8787
    restart: unless-stopped
